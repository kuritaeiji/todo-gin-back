// Code generated by MockGen. DO NOT EDIT.
// Source: service/list-service.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
	model "github.com/kuritaeiji/todo-gin-back/model"
)

// MockListService is a mock of ListService interface.
type MockListService struct {
	ctrl     *gomock.Controller
	recorder *MockListServiceMockRecorder
}

// MockListServiceMockRecorder is the mock recorder for MockListService.
type MockListServiceMockRecorder struct {
	mock *MockListService
}

// NewMockListService creates a new mock instance.
func NewMockListService(ctrl *gomock.Controller) *MockListService {
	mock := &MockListService{ctrl: ctrl}
	mock.recorder = &MockListServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockListService) EXPECT() *MockListServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockListService) Create(arg0 *gin.Context) (model.List, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(model.List)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockListServiceMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockListService)(nil).Create), arg0)
}

// Index mocks base method.
func (m *MockListService) Index(arg0 *gin.Context) ([]model.List, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Index", arg0)
	ret0, _ := ret[0].([]model.List)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Index indicates an expected call of Index.
func (mr *MockListServiceMockRecorder) Index(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Index", reflect.TypeOf((*MockListService)(nil).Index), arg0)
}
