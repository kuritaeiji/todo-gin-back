// Code generated by MockGen. DO NOT EDIT.
// Source: service/card-middleware-service.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
	model "github.com/kuritaeiji/todo-gin-back/model"
)

// MockCardMiddlewareService is a mock of CardMiddlewareService interface.
type MockCardMiddlewareService struct {
	ctrl     *gomock.Controller
	recorder *MockCardMiddlewareServiceMockRecorder
}

// MockCardMiddlewareServiceMockRecorder is the mock recorder for MockCardMiddlewareService.
type MockCardMiddlewareServiceMockRecorder struct {
	mock *MockCardMiddlewareService
}

// NewMockCardMiddlewareService creates a new mock instance.
func NewMockCardMiddlewareService(ctrl *gomock.Controller) *MockCardMiddlewareService {
	mock := &MockCardMiddlewareService{ctrl: ctrl}
	mock.recorder = &MockCardMiddlewareServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCardMiddlewareService) EXPECT() *MockCardMiddlewareServiceMockRecorder {
	return m.recorder
}

// Authorize mocks base method.
func (m *MockCardMiddlewareService) Authorize(arg0 *gin.Context) (model.Card, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Authorize", arg0)
	ret0, _ := ret[0].(model.Card)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Authorize indicates an expected call of Authorize.
func (mr *MockCardMiddlewareServiceMockRecorder) Authorize(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Authorize", reflect.TypeOf((*MockCardMiddlewareService)(nil).Authorize), arg0)
}
